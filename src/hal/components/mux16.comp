component mux16 "Select from one of sixteen input values";
pin in bit suppress_no_input"""\
This suppresses changing the output if all select lines are false.
This stops unwanted jumps in output between transitions of input.
""";
pin in bit sel0;
pin in bit sel1;
pin in bit sel2;
pin in bit sel3 """\
Together, these determine which \\fBin\\fIN\\fR value is copied to \\fBout\\fR.
""";
pin out float out_f;
pin out s32 out_s """\
Follows the value of one of the \\fBin\\fIN\\fR values according to the four \\fBsel\\fR values
The s32 value will be trunuated and limited to the max and min values of signed values. 
.RS
.TP
\\fBsel3=FALSE\\fR, \\fBsel2=FALSE\\fR, \\fBsel1=FALSE\\fR, \\fBsel0=FALSE\\fR
\\fBout\\fR follows \\fBin0\\fR
.TP
\\fBsel3=FALSE\\fR, \\fBsel2=FALSE\\fR, \\fBsel1=FALSE\\fR, \\fBsel0=TRUE\\fR
\\fBout\\fR follows \\fBin1\\fR
.TP
etc.
.RE
""";
pin in float in00;
pin in float in01;
pin in float in02;
pin in float in03;
pin in float in04;
pin in float in05;
pin in float in06;
pin in float in07;
pin in float in08;
pin in float in09;
pin in float in10;
pin in float in11;
pin in float in12;
pin in float in13;
pin in float in14;
pin in float in15;
function _;
license "GPL";
;;
FUNCTION(_) {
    if(suppress_no_input) {
        if (sel0 + sel1 + sel2 + sel3 == 0) {
            return;
        }
    }
    if(sel0) {
        if(sel1) {
            if(sel2) {
                if(sel3) {out_f = in15; out_s = in15;}
                else     {out_f = in07; out_s = in07;}
            }
            else {
                if(sel3) {out_f = in11; out_s = in11;}
                else     {out_f = in03; out_s = in03;}
            }
        }
        else {
            if(sel2) {
                if(sel3) {out_f = in13; out_s = in13;}
                else     {out_f = in05; out_s = in05;}
            }
            else {
                if(sel3) {out_f = in09; out_s = in09;}
                else     {out_f = in01; out_s = in01;}
            }
        }
    }
    else {
       if(sel1) {
            if(sel2) {
                if(sel3) {out_f = in14; out_s = in14;}
                else     {out_f = in06; out_s = in06;}
            }
            else {
                if(sel3) {out_f = in10; out_s = in10;}
                else     {out_f = in02; out_s = in02;}
            }
        }
        else {
            if(sel2) {
                if(sel3) {out_f = in12; out_s = in12;}
                else     {out_f = in04; out_s = in04;}
            }
            else {
                if(sel3) {out_f = in08; out_s = in08;}
                else     {out_f = in00; out_s = in00;}
            }
        }
    }
}
